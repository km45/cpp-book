{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u30bc\u30ed\u304b\u3089\u5b66\u3076 C++ \u00b6 \u3053\u306e\u30b5\u30a4\u30c8\u306f C++ \u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u305f\u5b66\u7fd2\u30b5\u30a4\u30c8\u3067\u3059\u3002 \u672c\u66f8\u3092\u901a\u3058\u3066 C++ \u306e\u958b\u767a\u74b0\u5883\u3084\u69cb\u6587\u30fb\u5358\u4f53\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9\u306a\u3069\u304c \u4e00\u901a\u308a\u5b66\u3079\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 C++ \u306e\u7279\u5fb4 \u00b6 C++ \u306f \u30d3\u30e3\u30fc\u30cd\u30fb\u30b9\u30c8\u30ed\u30f4\u30b9\u30c8\u30eb\u30c3\u30d7 \u306b\u3088\u308a\u958b\u767a\u3055\u308c\u305f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u3002 C++ \u306b\u306f\u4e3b\u306b\u6b21\u306e\u3088\u3046\u306a\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002 \u9ad8\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9 \u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u5c11\u306a\u3044 \u67d4\u8edf\u6027\u304c\u3042\u308b \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u51fa\u3057\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u4f4e\u30ec\u30d9\u30eb\u306a\u30b3\u30fc\u30c9\u304c\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u5206\u3001 \u4e0d\u5177\u5408\u304c\u6df7\u5165\u3057\u3084\u3059\u3044\u3068\u3044\u3046\u30c7\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u53e4\u304f\u304b\u3089\u3042\u308b\u8a00\u8a9e\u306e\u305f\u3081\u3001\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u306f\u8c4a\u5bcc\u306b\u63c3\u3063\u3066\u3044\u307e\u3059\u3002 \u4ed6\u306e\u8a00\u8a9e\u306b\u6bd4\u3079\u308b\u3068\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3084\u3084\u8ca7\u5f31\u3067\u3059\u304c\u3001 \u3053\u308c\u306f\u67d4\u8edf\u6027\u3068\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u7d50\u679c\u3067\u3059\u3002","title":"\u30db\u30fc\u30e0"},{"location":"#c","text":"\u3053\u306e\u30b5\u30a4\u30c8\u306f C++ \u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u305f\u5b66\u7fd2\u30b5\u30a4\u30c8\u3067\u3059\u3002 \u672c\u66f8\u3092\u901a\u3058\u3066 C++ \u306e\u958b\u767a\u74b0\u5883\u3084\u69cb\u6587\u30fb\u5358\u4f53\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9\u306a\u3069\u304c \u4e00\u901a\u308a\u5b66\u3079\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002","title":"\u30bc\u30ed\u304b\u3089\u5b66\u3076 C++"},{"location":"#c_1","text":"C++ \u306f \u30d3\u30e3\u30fc\u30cd\u30fb\u30b9\u30c8\u30ed\u30f4\u30b9\u30c8\u30eb\u30c3\u30d7 \u306b\u3088\u308a\u958b\u767a\u3055\u308c\u305f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u3002 C++ \u306b\u306f\u4e3b\u306b\u6b21\u306e\u3088\u3046\u306a\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002 \u9ad8\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9 \u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u5c11\u306a\u3044 \u67d4\u8edf\u6027\u304c\u3042\u308b \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u51fa\u3057\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u4f4e\u30ec\u30d9\u30eb\u306a\u30b3\u30fc\u30c9\u304c\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u5206\u3001 \u4e0d\u5177\u5408\u304c\u6df7\u5165\u3057\u3084\u3059\u3044\u3068\u3044\u3046\u30c7\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u53e4\u304f\u304b\u3089\u3042\u308b\u8a00\u8a9e\u306e\u305f\u3081\u3001\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u306f\u8c4a\u5bcc\u306b\u63c3\u3063\u3066\u3044\u307e\u3059\u3002 \u4ed6\u306e\u8a00\u8a9e\u306b\u6bd4\u3079\u308b\u3068\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3084\u3084\u8ca7\u5f31\u3067\u3059\u304c\u3001 \u3053\u308c\u306f\u67d4\u8edf\u6027\u3068\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u7d50\u679c\u3067\u3059\u3002","title":"C++ \u306e\u7279\u5fb4"},{"location":"ch01-01-installation/","text":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u00b6 \u30b3\u30f3\u30d1\u30a4\u30e9 \u00b6 C++ \u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u591a\u304f\u306e\u30d9\u30f3\u30c0\u304c\u958b\u767a\u3057\u3066\u3044\u307e\u3059\u3002 \u4ee3\u8868\u7684\u306a\u3082\u306e\u306b\u306f\u6b21\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30e9 Linux macOS Windows GCC \ufe0f Clang Visual C++ GCC \u306f Linux \u3092\u30e1\u30a4\u30f3\u306b\u4f7f\u7528\u3055\u308c\u308b\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u3059\u304c\u3001 Linux \u4ee5\u5916\u306e\u4e3b\u8981\u306a\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u3082\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001 \u4e00\u756a\u5b9f\u7e3e\u306e\u3042\u308b\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u3059\u3002 Clang \u306f\u8fd1\u5e74\u6ce8\u76ee\u3055\u308c\u3066\u3044\u308b\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u3001 \u4eca\u5f8c\u306f GCC \u306b\u53d6\u3063\u3066\u4ee3\u308f\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u3059\u3002 \u672c\u66f8\u3067\u306f Windows \u7248\u306e GCC \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 GCC \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u306f msys2 \u3068\u3044\u3046\u30c4\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 msys2 \u306f Linux \u3067\u4f7f\u7528\u3067\u304d\u308b\u30b3\u30de\u30f3\u30c9\u306e\u4e00\u90e8\u3092 Windows \u306b\u79fb\u690d\u3057\u305f\u30c4\u30fc\u30eb\u30bb\u30c3\u30c8\u3067\u3059\u3002 msys2 \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u00b6 \u4e0b\u8a18\u306e msys2 \u306e\u516c\u5f0f\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 https://www.msys2.org/ \u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u306f msys2-i386-yyyymmdd.exe, msys2-x86_64-yyyymmdd.exe \u306e 2 \u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u524d\u8005\u304c 32 \u30d3\u30c3\u30c8\u7248\u3067\u5f8c\u8005\u304c 64 \u30d3\u30c3\u30c8\u7248\u306b\u306a\u308a\u307e\u3059\u3002 \u672c\u66f8\u3067\u306f 64 \u30d3\u30c3\u30c8\u7248\u3092\u3082\u3068\u306b\u8aac\u660e\u3059\u308b\u306e\u3067\u300164 \u30d3\u30c3\u30c8\u7248\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002 GCC \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u00b6 msys2 \u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u8d77\u52d5\u3057\u3066\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 $ pacman -S gcc IDE \u00b6 C++ \u7528\u306e IDE \u3068\u3057\u3066\u306f Visual Studio Code \u304c\u4eba\u6c17\u3067\u3059\u3002 Visual Studio Code \u81ea\u4f53\u306f\u30a8\u30c7\u30a3\u30bf\u306a\u306e\u3067\u3059\u304c\u3001\u62e1\u5f35\u6a5f\u80fd\u3092\u5165\u308c\u308b\u3053\u3068\u3067 C++ \u5411\u3051\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u4e0b\u8a18\u30b5\u30a4\u30c8\u3088\u308a Visual Studio Code \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002 https://code.visualstudio.com/ Visual Studio Code \u306e\u62e1\u5f35\u6a5f\u80fd\u3067\u3042\u308b C/C++ \u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 Visual Studio Code \u3092\u8d77\u52d5\u3057\u305f\u5f8c\u3001 Ctrl+Shift+X \u3092\u62bc\u3059\u3068 \u62e1\u5f35\u6a5f\u80fd\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u753b\u9762\u306b\u5207\u308a\u66ff\u308f\u308b\u306e\u3067\u3001 C/C++ \u3092\u691c\u7d22\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"1.1. \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"ch01-01-installation/#_1","text":"","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"ch01-01-installation/#_2","text":"C++ \u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u591a\u304f\u306e\u30d9\u30f3\u30c0\u304c\u958b\u767a\u3057\u3066\u3044\u307e\u3059\u3002 \u4ee3\u8868\u7684\u306a\u3082\u306e\u306b\u306f\u6b21\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30e9 Linux macOS Windows GCC \ufe0f Clang Visual C++ GCC \u306f Linux \u3092\u30e1\u30a4\u30f3\u306b\u4f7f\u7528\u3055\u308c\u308b\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u3059\u304c\u3001 Linux \u4ee5\u5916\u306e\u4e3b\u8981\u306a\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u3082\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001 \u4e00\u756a\u5b9f\u7e3e\u306e\u3042\u308b\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u3059\u3002 Clang \u306f\u8fd1\u5e74\u6ce8\u76ee\u3055\u308c\u3066\u3044\u308b\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u3001 \u4eca\u5f8c\u306f GCC \u306b\u53d6\u3063\u3066\u4ee3\u308f\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u3059\u3002 \u672c\u66f8\u3067\u306f Windows \u7248\u306e GCC \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 GCC \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u306f msys2 \u3068\u3044\u3046\u30c4\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 msys2 \u306f Linux \u3067\u4f7f\u7528\u3067\u304d\u308b\u30b3\u30de\u30f3\u30c9\u306e\u4e00\u90e8\u3092 Windows \u306b\u79fb\u690d\u3057\u305f\u30c4\u30fc\u30eb\u30bb\u30c3\u30c8\u3067\u3059\u3002","title":"\u30b3\u30f3\u30d1\u30a4\u30e9"},{"location":"ch01-01-installation/#msys2","text":"\u4e0b\u8a18\u306e msys2 \u306e\u516c\u5f0f\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 https://www.msys2.org/ \u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u306f msys2-i386-yyyymmdd.exe, msys2-x86_64-yyyymmdd.exe \u306e 2 \u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u524d\u8005\u304c 32 \u30d3\u30c3\u30c8\u7248\u3067\u5f8c\u8005\u304c 64 \u30d3\u30c3\u30c8\u7248\u306b\u306a\u308a\u307e\u3059\u3002 \u672c\u66f8\u3067\u306f 64 \u30d3\u30c3\u30c8\u7248\u3092\u3082\u3068\u306b\u8aac\u660e\u3059\u308b\u306e\u3067\u300164 \u30d3\u30c3\u30c8\u7248\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"msys2 \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"ch01-01-installation/#gcc","text":"msys2 \u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u8d77\u52d5\u3057\u3066\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 $ pacman -S gcc","title":"GCC \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"ch01-01-installation/#ide","text":"C++ \u7528\u306e IDE \u3068\u3057\u3066\u306f Visual Studio Code \u304c\u4eba\u6c17\u3067\u3059\u3002 Visual Studio Code \u81ea\u4f53\u306f\u30a8\u30c7\u30a3\u30bf\u306a\u306e\u3067\u3059\u304c\u3001\u62e1\u5f35\u6a5f\u80fd\u3092\u5165\u308c\u308b\u3053\u3068\u3067 C++ \u5411\u3051\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u4e0b\u8a18\u30b5\u30a4\u30c8\u3088\u308a Visual Studio Code \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002 https://code.visualstudio.com/ Visual Studio Code \u306e\u62e1\u5f35\u6a5f\u80fd\u3067\u3042\u308b C/C++ \u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 Visual Studio Code \u3092\u8d77\u52d5\u3057\u305f\u5f8c\u3001 Ctrl+Shift+X \u3092\u62bc\u3059\u3068 \u62e1\u5f35\u6a5f\u80fd\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u753b\u9762\u306b\u5207\u308a\u66ff\u308f\u308b\u306e\u3067\u3001 C/C++ \u3092\u691c\u7d22\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"IDE"},{"location":"ch01-02-hello-world/","text":"Hello, World! \u00b6 Visual Studio Code \u4e0a\u3067 main.cc \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066 \u4e0b\u8a18\u306e\u3088\u3046\u306a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 main.cc 1 2 3 4 5 6 7 #include <iostream> int main () { std :: cout << \"Hello, World!\" << std :: endl ; return 0 ; } msys2 \u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u8d77\u52d5\u3057\u3066\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059\u3002 $ g++ main.cc \u6210\u529f\u3059\u308b\u3068 a.exe \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002 \u3053\u308c\u304c\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306b\u306a\u308b\u306e\u3067\u3001\u5b9f\u884c\u3059\u308b\u3068 Hello, World! \u3068\u3044\u3046 \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002 $ ./a.exe Hello, World!","title":"1.2. Hello, World!"},{"location":"ch01-02-hello-world/#hello-world","text":"Visual Studio Code \u4e0a\u3067 main.cc \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066 \u4e0b\u8a18\u306e\u3088\u3046\u306a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 main.cc 1 2 3 4 5 6 7 #include <iostream> int main () { std :: cout << \"Hello, World!\" << std :: endl ; return 0 ; } msys2 \u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u8d77\u52d5\u3057\u3066\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059\u3002 $ g++ main.cc \u6210\u529f\u3059\u308b\u3068 a.exe \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002 \u3053\u308c\u304c\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306b\u306a\u308b\u306e\u3067\u3001\u5b9f\u884c\u3059\u308b\u3068 Hello, World! \u3068\u3044\u3046 \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002 $ ./a.exe Hello, World!","title":"Hello, World!"},{"location":"ch02-01-variables/","text":"\u5909\u6570 \u00b6 C++ \u3067\u5909\u6570\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002 \u6574\u6570\u5024\u306e\u5909\u6570\u3092\u5ba3\u8a00\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 int x = 5 ; int \u306f\u6574\u6570\u3092\u8868\u73fe\u3059\u308b\u578b\u3067\u3059\u3002 \u5ba3\u8a00\u6642\u306b\u521d\u671f\u5316\u3092\u305b\u305a\u306b\u3042\u3068\u3067\u5024\u3092\u4ee3\u5165\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 int x ; x = 5 ; \u521d\u671f\u5024\u3092\u8a2d\u5b9a\u3057\u306a\u3044\u307e\u307e\u5909\u6570\u3092\u4f7f\u7528\u3059\u308b\u3068\u4e0d\u5b9a\u306a\u5024\u304c\u5165\u308b\u306e\u3067\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002 int x ; std :: cout << x << std :: endl ; // \u4e0d\u5b9a\u306a\u5024\u304c\u51fa\u529b\u3055\u308c\u308b const \u00b6 const \u3092\u4ed8\u3051\u308b\u3068\u5024\u306e\u66f8\u304d\u63db\u3048\u304c\u7981\u6b62\u3067\u304d\u307e\u3059\u3002 const int x = 5 ; x = 10 ; // \u30a8\u30e9\u30fc \u578b\u63a8\u8ad6 \u00b6 \u5909\u6570\u306e\u5ba3\u8a00\u6642\u306b\u306f\u660e\u793a\u7684\u306b\u578b\u3092\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082 auto \u3092\u4f7f\u3046\u3068 \u53f3\u8fba\u306e\u5024\u304b\u3089\u578b\u3092\u63a8\u8ad6\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 auto x = 5 ; // x \u306f int \u3068\u63a8\u8ad6","title":"2.1. \u5909\u6570"},{"location":"ch02-01-variables/#_1","text":"C++ \u3067\u5909\u6570\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002 \u6574\u6570\u5024\u306e\u5909\u6570\u3092\u5ba3\u8a00\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 int x = 5 ; int \u306f\u6574\u6570\u3092\u8868\u73fe\u3059\u308b\u578b\u3067\u3059\u3002 \u5ba3\u8a00\u6642\u306b\u521d\u671f\u5316\u3092\u305b\u305a\u306b\u3042\u3068\u3067\u5024\u3092\u4ee3\u5165\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 int x ; x = 5 ; \u521d\u671f\u5024\u3092\u8a2d\u5b9a\u3057\u306a\u3044\u307e\u307e\u5909\u6570\u3092\u4f7f\u7528\u3059\u308b\u3068\u4e0d\u5b9a\u306a\u5024\u304c\u5165\u308b\u306e\u3067\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002 int x ; std :: cout << x << std :: endl ; // \u4e0d\u5b9a\u306a\u5024\u304c\u51fa\u529b\u3055\u308c\u308b","title":"\u5909\u6570"},{"location":"ch02-01-variables/#const","text":"const \u3092\u4ed8\u3051\u308b\u3068\u5024\u306e\u66f8\u304d\u63db\u3048\u304c\u7981\u6b62\u3067\u304d\u307e\u3059\u3002 const int x = 5 ; x = 10 ; // \u30a8\u30e9\u30fc","title":"const"},{"location":"ch02-01-variables/#_2","text":"\u5909\u6570\u306e\u5ba3\u8a00\u6642\u306b\u306f\u660e\u793a\u7684\u306b\u578b\u3092\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082 auto \u3092\u4f7f\u3046\u3068 \u53f3\u8fba\u306e\u5024\u304b\u3089\u578b\u3092\u63a8\u8ad6\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 auto x = 5 ; // x \u306f int \u3068\u63a8\u8ad6","title":"\u578b\u63a8\u8ad6"},{"location":"ch02-02-primitive-types/","text":"\u57fa\u672c\u578b \u00b6 C++ \u3067\u306f\u3058\u3081\u304b\u3089\u4f7f\u7528\u3067\u304d\u308b\u57fa\u672c\u578b\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002 bool \u00b6 bool \u306f\u771f\u507d\u5024\u3092\u8868\u3059\u578b\u3067 true \u307e\u305f\u306f false \u304c\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 bool ok = true ; char \u00b6 char \u306f\u30a2\u30b9\u30ad\u30fc\u6587\u5b571\u6587\u5b57\u3092\u8868\u73fe\u3059\u308b\u578b\u3067\u3059\u3002 \u305f\u3060\u3057\u5185\u90e8\u8868\u73fe\u306f\u30a2\u30b9\u30ad\u30fc\u30b3\u30fc\u30c9\u306e\u6574\u6570\u5024\u3068\u3057\u3066\u6271\u308f\u308c\u3001 \u6a19\u6e96\u51fa\u529b\u306a\u3069\u306b\u51fa\u529b\u3059\u308b\u969b\u306b\u6587\u5b57\u306b\u5909\u63db\u3055\u308c\u3066\u51fa\u529b\u3055\u308c\u307e\u3059\u3002 char x = 'x' ; \u6570\u5024 \u00b6 \u6570\u5024\u3092\u8868\u73fe\u3059\u308b\u578b\u306f\u8907\u6570\u7a2e\u985e\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u6574\u6570\u578b \u00b6 \u6574\u6570\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u306e\u578b\u3067\u3059\u3002 char short int long \u4e0b\u306b\u884c\u304f\u306b\u9023\u308c\u3066\u5927\u304d\u306a\u5024\u304c\u8868\u73fe\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u5909\u6570\u306e\u30b5\u30a4\u30ba\u3082\u5897\u5927\u3057\u307e\u3059\u3002 \u5177\u4f53\u7684\u306a\u30b5\u30a4\u30ba\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u5909\u308f\u3063\u3066\u304d\u307e\u3059\u304c GCC \u3067\u306f 8, 16, 32, 64 \u30d3\u30c3\u30c8\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u4e00\u822c\u7684\u306b\u306f int \u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002 \u7b26\u53f7\u4ed8\u304d\u30fb\u7b26\u53f7\u306a\u3057\u6574\u6570\u578b \u00b6 \u5404\u6574\u6570\u578b\u306b unsigned \u3092\u4ed8\u3051\u308b\u3068\u6b63\u306e\u6570\u3057\u304b\u8868\u73fe\u3067\u304d\u306a\u304f\u306a\u308b\u4ee3\u308f\u308a\u306b \u5927\u304d\u306a\u5024\u304c\u8868\u73fe\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 unsigned int x = 4000000000 ; signed \u3092\u4ed8\u3051\u308b\u3068\u6b63\u8ca0\u4e21\u65b9\u306e\u5024\u304c\u8868\u73fe\u3067\u304d\u307e\u3059\u3002 \u660e\u793a\u7684\u306b\u4ed8\u3051\u306a\u304f\u3066\u3082\u30c7\u30d5\u30a9\u30eb\u30c8\u306f signed \u306b\u306a\u308a\u307e\u3059\u3002 \u30b5\u30a4\u30ba\u6307\u5b9a\u4ed8\u304d\u6574\u6570\u578b \u00b6 \u4e0a\u8ff0\u306e\u6574\u6570\u578b\u306f\u578b\u306e\u30b5\u30a4\u30ba\u304c\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u307e\u3061\u307e\u3061\u306a\u306e\u3067 \u8907\u6570\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u5bfe\u5fdc\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3068\u304d\u306f \u79fb\u690d\u6027\u306e\u9762\u3067\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u305d\u306e\u3088\u3046\u306a\u3068\u304d\u306f\u30b5\u30a4\u30ba\u6307\u5b9a\u4ed8\u304d\u6574\u6570\u578b\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 int8_t int16_t int32_t int64_t uint8_t uint16_t uint32_t uint64_t \u6570\u5024\u306f\u578b\u306e\u30d3\u30c3\u30c8\u30b5\u30a4\u30ba\u3092\u8868\u3057\u3066\u304a\u308a\u3001u \u306f unsigned \u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002 \u30b5\u30a4\u30ba\u6307\u5b9a\u4ed8\u304d\u6574\u6570\u578b\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f #include <cstdint> \u3068\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 #include <cstdint> int32_t x = 5 ; \u6d6e\u52d5\u5c0f\u6570\u70b9\u578b \u00b6 \u5c0f\u6570\u3092\u8868\u73fe\u3059\u308b\u578b\u306f\u6b21\u306e2\u3064\u306e\u578b\u304c\u3042\u308a\u307e\u3059\u3002 float double float \u306f 32 \u30d3\u30c3\u30c8\u306e\u5927\u304d\u3055\u3092\u6301\u3061\u3001 double \u306f 64 \u30d3\u30c3\u30c8\u306e\u5927\u304d\u3055\u3092\u6301\u3061\u307e\u3059\u3002 \u307e\u305f double \u306e\u65b9\u304c float \u306b\u6bd4\u3079\u3066\u8a08\u7b97\u7cbe\u5ea6\u304c\u9ad8\u3044\u3067\u3059\u304c\u6570\u5024\u8a08\u7b97\u306e \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306f\u4f4e\u3044\u3067\u3059\u3002","title":"2.2. \u57fa\u672c\u578b"},{"location":"ch02-02-primitive-types/#_1","text":"C++ \u3067\u306f\u3058\u3081\u304b\u3089\u4f7f\u7528\u3067\u304d\u308b\u57fa\u672c\u578b\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002","title":"\u57fa\u672c\u578b"},{"location":"ch02-02-primitive-types/#bool","text":"bool \u306f\u771f\u507d\u5024\u3092\u8868\u3059\u578b\u3067 true \u307e\u305f\u306f false \u304c\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 bool ok = true ;","title":"bool"},{"location":"ch02-02-primitive-types/#char","text":"char \u306f\u30a2\u30b9\u30ad\u30fc\u6587\u5b571\u6587\u5b57\u3092\u8868\u73fe\u3059\u308b\u578b\u3067\u3059\u3002 \u305f\u3060\u3057\u5185\u90e8\u8868\u73fe\u306f\u30a2\u30b9\u30ad\u30fc\u30b3\u30fc\u30c9\u306e\u6574\u6570\u5024\u3068\u3057\u3066\u6271\u308f\u308c\u3001 \u6a19\u6e96\u51fa\u529b\u306a\u3069\u306b\u51fa\u529b\u3059\u308b\u969b\u306b\u6587\u5b57\u306b\u5909\u63db\u3055\u308c\u3066\u51fa\u529b\u3055\u308c\u307e\u3059\u3002 char x = 'x' ;","title":"char"},{"location":"ch02-02-primitive-types/#_2","text":"\u6570\u5024\u3092\u8868\u73fe\u3059\u308b\u578b\u306f\u8907\u6570\u7a2e\u985e\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002","title":"\u6570\u5024"},{"location":"ch02-02-primitive-types/#_3","text":"\u6574\u6570\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u306e\u578b\u3067\u3059\u3002 char short int long \u4e0b\u306b\u884c\u304f\u306b\u9023\u308c\u3066\u5927\u304d\u306a\u5024\u304c\u8868\u73fe\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u5909\u6570\u306e\u30b5\u30a4\u30ba\u3082\u5897\u5927\u3057\u307e\u3059\u3002 \u5177\u4f53\u7684\u306a\u30b5\u30a4\u30ba\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u5909\u308f\u3063\u3066\u304d\u307e\u3059\u304c GCC \u3067\u306f 8, 16, 32, 64 \u30d3\u30c3\u30c8\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u4e00\u822c\u7684\u306b\u306f int \u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002","title":"\u6574\u6570\u578b"},{"location":"ch02-02-primitive-types/#_4","text":"\u5404\u6574\u6570\u578b\u306b unsigned \u3092\u4ed8\u3051\u308b\u3068\u6b63\u306e\u6570\u3057\u304b\u8868\u73fe\u3067\u304d\u306a\u304f\u306a\u308b\u4ee3\u308f\u308a\u306b \u5927\u304d\u306a\u5024\u304c\u8868\u73fe\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 unsigned int x = 4000000000 ; signed \u3092\u4ed8\u3051\u308b\u3068\u6b63\u8ca0\u4e21\u65b9\u306e\u5024\u304c\u8868\u73fe\u3067\u304d\u307e\u3059\u3002 \u660e\u793a\u7684\u306b\u4ed8\u3051\u306a\u304f\u3066\u3082\u30c7\u30d5\u30a9\u30eb\u30c8\u306f signed \u306b\u306a\u308a\u307e\u3059\u3002","title":"\u7b26\u53f7\u4ed8\u304d\u30fb\u7b26\u53f7\u306a\u3057\u6574\u6570\u578b"},{"location":"ch02-02-primitive-types/#_5","text":"\u4e0a\u8ff0\u306e\u6574\u6570\u578b\u306f\u578b\u306e\u30b5\u30a4\u30ba\u304c\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u307e\u3061\u307e\u3061\u306a\u306e\u3067 \u8907\u6570\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u5bfe\u5fdc\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3068\u304d\u306f \u79fb\u690d\u6027\u306e\u9762\u3067\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u305d\u306e\u3088\u3046\u306a\u3068\u304d\u306f\u30b5\u30a4\u30ba\u6307\u5b9a\u4ed8\u304d\u6574\u6570\u578b\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 int8_t int16_t int32_t int64_t uint8_t uint16_t uint32_t uint64_t \u6570\u5024\u306f\u578b\u306e\u30d3\u30c3\u30c8\u30b5\u30a4\u30ba\u3092\u8868\u3057\u3066\u304a\u308a\u3001u \u306f unsigned \u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002 \u30b5\u30a4\u30ba\u6307\u5b9a\u4ed8\u304d\u6574\u6570\u578b\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f #include <cstdint> \u3068\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 #include <cstdint> int32_t x = 5 ;","title":"\u30b5\u30a4\u30ba\u6307\u5b9a\u4ed8\u304d\u6574\u6570\u578b"},{"location":"ch02-02-primitive-types/#_6","text":"\u5c0f\u6570\u3092\u8868\u73fe\u3059\u308b\u578b\u306f\u6b21\u306e2\u3064\u306e\u578b\u304c\u3042\u308a\u307e\u3059\u3002 float double float \u306f 32 \u30d3\u30c3\u30c8\u306e\u5927\u304d\u3055\u3092\u6301\u3061\u3001 double \u306f 64 \u30d3\u30c3\u30c8\u306e\u5927\u304d\u3055\u3092\u6301\u3061\u307e\u3059\u3002 \u307e\u305f double \u306e\u65b9\u304c float \u306b\u6bd4\u3079\u3066\u8a08\u7b97\u7cbe\u5ea6\u304c\u9ad8\u3044\u3067\u3059\u304c\u6570\u5024\u8a08\u7b97\u306e \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306f\u4f4e\u3044\u3067\u3059\u3002","title":"\u6d6e\u52d5\u5c0f\u6570\u70b9\u578b"},{"location":"ch02-03-functions/","text":"\u95a2\u6570 \u00b6 C++\u3067\u306e\u95a2\u6570\u306e\u4f7f\u7528\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002 \u95a2\u6570 HelloWorld() \u3092\u4f5c\u6210\u3057\u3001 main() \u304b\u3089\u547c\u3073\u51fa\u3057\u3066\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 main.cc 1 2 3 4 5 6 7 8 9 10 11 12 13 #include <iostream> void HelloWorld ( int n ) { for ( int i = 0 ; i < n ; ++ i ) { std :: cout << \"[\" << i << \"] \" << \"Hello World!\" << std :: endl ; } } int main () { HelloWorld ( 10 ); return 0 ; } \u3053\u3053\u3067\u6ce8\u76ee\u3059\u3079\u304d\u70b9\u306f\u3001\u95a2\u6570 HelloWorld() \u304c\u3001\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b10\u884c\u76ee\u3088\u308a\u4e0a\u306e\u884c\u3067\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u70b9\u3067\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u4e0a\u304b\u3089\u9806\u306b\u89e3\u91c8\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u5bfe\u3057\u3066 HelloWorld() \u304c\u4f55\u8005\u306a\u306e\u304b\u3092\u4e8b\u524d\u306b\u6559\u3048\u308b\u3053\u3068\u3067\u3001 HelloWorld() \u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u304c\u884c\u306a\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u8a66\u3057\u306b HelloWorld() \u3092 main() \u3088\u308a\u3082\u4e0b\u306e\u884c\u306b\u8a18\u8ff0\u3059\u308b\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u5931\u6557\u3057\u307e\u3059\u3002 main.cc 1 2 3 4 5 6 7 8 9 10 11 12 13 #include <iostream> int main () { HelloWorld ( 10 ); // \u3053\u3053\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc return 0 ; } void HelloWorld ( int n ) { for ( int i = 0 ; i < n ; ++ i ) { std :: cout << \"[\" << i << \"] \" << \"Hello World!\" << std :: endl ; } } 4\u884c\u76ee\u306e\u6642\u70b9\u3067\u306f\u3001 HelloWorld() \u304c\u4f55\u8005\u306a\u306e\u304b\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u306f\u7406\u89e3\u3067\u304d\u306a\u3044\u305f\u3081\u3067\u3059\u3002 \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00 \u00b6 \u95a2\u6570\u306e\u5ba3\u8a00\u306e\u307f\u3092\u547c\u3073\u51fa\u3057\u7b87\u6240\u3088\u308a\u3082\u4e0a\u306e\u884c\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3067\u3001\u95a2\u6570\u306e\u5b58\u5728\u3092\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6559\u3048\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 \u3053\u308c\u3092\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\uff08\u524d\u65b9\u5ba3\u8a00\uff09\u3068\u547c\u3073\u307e\u3059\u3002 main.cc 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include <iostream> void HelloWorld ( int n ); // \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\uff08\u524d\u65b9\u5ba3\u8a00\uff09 int main () { HelloWorld ( 10 ); return 0 ; } void HelloWorld ( int n ) { for ( int i = 0 ; i < n ; ++ i ) { std :: cout << \"[\" << i << \"] \" << \"Hello World!\" << std :: endl ; } } HelloWorld() \u306e\u672c\u4f53\u306f main() \u306e\u547c\u3073\u51fa\u3057\u7b87\u6240\u3088\u308a\u3082\u4e0b\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\u304c\u3042\u308b\u3053\u3068\u3067\u554f\u984c\u306a\u304f\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u307e\u3059\u3002 main\u95a2\u6570 \u00b6 \u3053\u308c\u307e\u3067\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u5ea6\u3005\u73fe\u308c\u305f main() \u3092main\u95a2\u6570\u3068\u547c\u3073\u307e\u3059\u3002 C++\u3067\u751f\u6210\u3055\u308c\u305f\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001main\u95a2\u6570\u3092\u8d77\u70b9\u306b\u51e6\u7406\u304c\u9032\u307f\u307e\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570 \u00b6 main\u95a2\u6570\u306b\u3082\u5f15\u6570\u3092\u6e21\u3059\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002main\u95a2\u6570\u306b\u6e21\u3055\u308c\u308b\u5f15\u6570\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3068\u547c\u3073\u307e\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u6642\u306b\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u7d9a\u3051\u3066\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u3067\u8907\u6570\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 # \u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u540d <\u5f15\u65701> <\u5f15\u65702> <\u5f15\u65703> ... $ ./a.exe XXX YYY ZZZ \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u5834\u5408\u3001main\u95a2\u6570\u306e\u5f15\u6570\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 int main ( int argc , char * argv []); int argc : \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306e\u500b\u6570\u3092\u8868\u3059 char* argv[] : \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u304c\u683c\u7d0d\u3055\u308c\u308b main.cc 1 2 3 4 5 6 7 8 9 #include <iostream> int main ( int argc , char * argv []) { for ( int i = 0 ; i < argc ; ++ i ) { std :: cout << \"argv[\" << i << \"]: \" << argv [ i ] << std :: endl ; } return 0 ; } # \u5b9f\u884c\u7d50\u679c $ ./a.exe Hello World! argv [ 0 ] : ./a.exe argv [ 1 ] : Hello argv [ 2 ] : World! \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9 \u00b6 \u95a2\u6570\u306e\u5f15\u6570\u306e\u500b\u6570\u3084\u578b\u304c\u7570\u306a\u308b\u5834\u5408\u3001\u540c\u3058\u540d\u524d\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 \u3053\u308c\u3092\uff08\u95a2\u6570\u306e\uff09\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3068\u547c\u3073\u307e\u3059\u3002\u5f15\u6570\u306e\u500b\u6570\u3084\u578b\u306e\u60c5\u5831\u3092\u5143\u306b\u547c\u3073\u51fa\u3059\u95a2\u6570\u3092\u6c7a\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 main.cc 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include <iostream> void Print ( int x ) { std :: cout << \"int: \" << x << std :: endl ; } void Print ( double x ) { std :: cout << \"double: \" << x << std :: endl ; } int main () { Print ( 2 ); Print ( 2.1 ); return 0 ; } # \u5b9f\u884c\u7d50\u679c $ ./a.exe int: 2 double: 2 .1","title":"2.3. \u95a2\u6570"},{"location":"ch02-03-functions/#_1","text":"C++\u3067\u306e\u95a2\u6570\u306e\u4f7f\u7528\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002 \u95a2\u6570 HelloWorld() \u3092\u4f5c\u6210\u3057\u3001 main() \u304b\u3089\u547c\u3073\u51fa\u3057\u3066\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 main.cc 1 2 3 4 5 6 7 8 9 10 11 12 13 #include <iostream> void HelloWorld ( int n ) { for ( int i = 0 ; i < n ; ++ i ) { std :: cout << \"[\" << i << \"] \" << \"Hello World!\" << std :: endl ; } } int main () { HelloWorld ( 10 ); return 0 ; } \u3053\u3053\u3067\u6ce8\u76ee\u3059\u3079\u304d\u70b9\u306f\u3001\u95a2\u6570 HelloWorld() \u304c\u3001\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b10\u884c\u76ee\u3088\u308a\u4e0a\u306e\u884c\u3067\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u70b9\u3067\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u4e0a\u304b\u3089\u9806\u306b\u89e3\u91c8\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u5bfe\u3057\u3066 HelloWorld() \u304c\u4f55\u8005\u306a\u306e\u304b\u3092\u4e8b\u524d\u306b\u6559\u3048\u308b\u3053\u3068\u3067\u3001 HelloWorld() \u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u304c\u884c\u306a\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u8a66\u3057\u306b HelloWorld() \u3092 main() \u3088\u308a\u3082\u4e0b\u306e\u884c\u306b\u8a18\u8ff0\u3059\u308b\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u5931\u6557\u3057\u307e\u3059\u3002 main.cc 1 2 3 4 5 6 7 8 9 10 11 12 13 #include <iostream> int main () { HelloWorld ( 10 ); // \u3053\u3053\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc return 0 ; } void HelloWorld ( int n ) { for ( int i = 0 ; i < n ; ++ i ) { std :: cout << \"[\" << i << \"] \" << \"Hello World!\" << std :: endl ; } } 4\u884c\u76ee\u306e\u6642\u70b9\u3067\u306f\u3001 HelloWorld() \u304c\u4f55\u8005\u306a\u306e\u304b\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u306f\u7406\u89e3\u3067\u304d\u306a\u3044\u305f\u3081\u3067\u3059\u3002","title":"\u95a2\u6570"},{"location":"ch02-03-functions/#_2","text":"\u95a2\u6570\u306e\u5ba3\u8a00\u306e\u307f\u3092\u547c\u3073\u51fa\u3057\u7b87\u6240\u3088\u308a\u3082\u4e0a\u306e\u884c\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3067\u3001\u95a2\u6570\u306e\u5b58\u5728\u3092\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6559\u3048\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 \u3053\u308c\u3092\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\uff08\u524d\u65b9\u5ba3\u8a00\uff09\u3068\u547c\u3073\u307e\u3059\u3002 main.cc 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include <iostream> void HelloWorld ( int n ); // \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\uff08\u524d\u65b9\u5ba3\u8a00\uff09 int main () { HelloWorld ( 10 ); return 0 ; } void HelloWorld ( int n ) { for ( int i = 0 ; i < n ; ++ i ) { std :: cout << \"[\" << i << \"] \" << \"Hello World!\" << std :: endl ; } } HelloWorld() \u306e\u672c\u4f53\u306f main() \u306e\u547c\u3073\u51fa\u3057\u7b87\u6240\u3088\u308a\u3082\u4e0b\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\u304c\u3042\u308b\u3053\u3068\u3067\u554f\u984c\u306a\u304f\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u307e\u3059\u3002","title":"\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00"},{"location":"ch02-03-functions/#main","text":"\u3053\u308c\u307e\u3067\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u5ea6\u3005\u73fe\u308c\u305f main() \u3092main\u95a2\u6570\u3068\u547c\u3073\u307e\u3059\u3002 C++\u3067\u751f\u6210\u3055\u308c\u305f\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001main\u95a2\u6570\u3092\u8d77\u70b9\u306b\u51e6\u7406\u304c\u9032\u307f\u307e\u3059\u3002","title":"main\u95a2\u6570"},{"location":"ch02-03-functions/#_3","text":"main\u95a2\u6570\u306b\u3082\u5f15\u6570\u3092\u6e21\u3059\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002main\u95a2\u6570\u306b\u6e21\u3055\u308c\u308b\u5f15\u6570\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3068\u547c\u3073\u307e\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u6642\u306b\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u7d9a\u3051\u3066\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u3067\u8907\u6570\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 # \u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u540d <\u5f15\u65701> <\u5f15\u65702> <\u5f15\u65703> ... $ ./a.exe XXX YYY ZZZ \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u5834\u5408\u3001main\u95a2\u6570\u306e\u5f15\u6570\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 int main ( int argc , char * argv []); int argc : \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306e\u500b\u6570\u3092\u8868\u3059 char* argv[] : \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u304c\u683c\u7d0d\u3055\u308c\u308b main.cc 1 2 3 4 5 6 7 8 9 #include <iostream> int main ( int argc , char * argv []) { for ( int i = 0 ; i < argc ; ++ i ) { std :: cout << \"argv[\" << i << \"]: \" << argv [ i ] << std :: endl ; } return 0 ; } # \u5b9f\u884c\u7d50\u679c $ ./a.exe Hello World! argv [ 0 ] : ./a.exe argv [ 1 ] : Hello argv [ 2 ] : World!","title":"\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570"},{"location":"ch02-03-functions/#_4","text":"\u95a2\u6570\u306e\u5f15\u6570\u306e\u500b\u6570\u3084\u578b\u304c\u7570\u306a\u308b\u5834\u5408\u3001\u540c\u3058\u540d\u524d\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 \u3053\u308c\u3092\uff08\u95a2\u6570\u306e\uff09\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3068\u547c\u3073\u307e\u3059\u3002\u5f15\u6570\u306e\u500b\u6570\u3084\u578b\u306e\u60c5\u5831\u3092\u5143\u306b\u547c\u3073\u51fa\u3059\u95a2\u6570\u3092\u6c7a\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 main.cc 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include <iostream> void Print ( int x ) { std :: cout << \"int: \" << x << std :: endl ; } void Print ( double x ) { std :: cout << \"double: \" << x << std :: endl ; } int main () { Print ( 2 ); Print ( 2.1 ); return 0 ; } # \u5b9f\u884c\u7d50\u679c $ ./a.exe int: 2 double: 2 .1","title":"\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9"},{"location":"ch02-04-pointers/","text":"\u30dd\u30a4\u30f3\u30bf \u00b6 \u30dd\u30a4\u30f3\u30bf\u3068\u3044\u3046\u306e\u306f\u4ed6\u306e\u5909\u6570\u3092\u53c2\u7167\u3059\u308b\u4ed5\u7d44\u307f\u306e1\u3064\u3067\u3059\u3002 Windows \u306e\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u3084 Linux \u306e\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3068\u540c\u3058\u3088\u3046\u306a\u6a5f\u80fd\u3067\u3059\u3002 int x = 5 ; int * p = & x ; int* \u3068\u66f8\u304f\u3068 int \u578b\u306e\u5909\u6570\u3092\u6307\u3059\u30dd\u30a4\u30f3\u30bf\u578b\u3068\u306a\u308a\u307e\u3059\u3002 &x \u3068\u3044\u3046\u306e\u306f x \u3092\u6307\u3059\u30dd\u30a4\u30f3\u30bf\u3092\u5f97\u308b\u305f\u3081\u306e\u6f14\u7b97\u3067\u3059\u3002 nullptr \u00b6 \u3069\u306e\u5909\u6570\u3082\u53c2\u7167\u3057\u3066\u3044\u306a\u3044\u30dd\u30a4\u30f3\u30bf\u306e\u3053\u3068\u3092\u30cc\u30eb\u30dd\u30a4\u30f3\u30bf\u3068\u547c\u3073\u307e\u3059\u3002C++\u3067\u306f\u30cc\u30eb\u30dd\u30a4\u30f3\u30bf\u3092\u8868\u3059\u30ad\u30fc\u30ef\u30fc\u30c9\u3068\u3057\u3066 nullptr \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002 int * p = nullptr ; \u30c7\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\uff08\u9006\u53c2\u7167\uff09 \u00b6 \u30dd\u30a4\u30f3\u30bf\u304c\u6307\u3059\u5909\u6570\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002 int x = 5 ; int * p = & x ; int y = * p ; \u5909\u6570\u304b\u3089\u30dd\u30a4\u30f3\u30bf\u3092\u5f97\u308b\u3068\u304d\u306b\u306f & \u3092\u4ed8\u3051\u3001\u30dd\u30a4\u30f3\u30bf\u304b\u3089\u5024\u3092\u5f97\u308b\u306b\u306f * \u3092\u4ed8\u3051\u307e\u3059\u3002 const\u30dd\u30a4\u30f3\u30bf \u00b6 \u30dd\u30a4\u30f3\u30bf\u578b\u306b const \u3092\u4ed8\u3051\u308b\u5834\u5408\u3001 const \u306e\u4ed8\u3051\u308b\u4f4d\u7f6e\u306b\u3088\u3063\u3066\u610f\u5473\u5408\u3044\u304c\u5909\u308f\u308a\u307e\u3059\u3002 * \u306e\u524d\u306b const \u3092\u4ed8\u3051\u308b\u3068\u3001\u30dd\u30a4\u30f3\u30bf\u304c\u6307\u3057\u793a\u3059\u5024\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002 int x = 123 ; const int * p = & x ; * p = 456 ; // \u30a8\u30e9\u30fc * \u306e\u5f8c\u306b const \u3092\u4ed8\u3051\u308b\u3068\u3001\u30dd\u30a4\u30f3\u30bf\u81ea\u8eab\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002 int x = 123 ; int * const p = & x ; p = nullptr ; // \u30a8\u30e9\u30fc \u4f75\u7528\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 const int * const p = & x ; \u53c2\u7167 \u00b6 \u30dd\u30a4\u30f3\u30bf\u306b\u4f3c\u305f\u4ed5\u7d44\u307f\u3068\u3057\u3066\u53c2\u7167\u304c\u3042\u308a\u307e\u3059\u3002 int x = 100 ; int * p = & x ; // p\u306f\u30dd\u30a4\u30f3\u30bf\u578b int & r = x ; // r\u306f\u53c2\u7167\u578b * p = 200 ; r = 200 ; int& \u3068\u66f8\u304f\u3068 int \u306e\u53c2\u7167\u578b\u3068\u306a\u308a\u307e\u3059\u3002 \u30dd\u30a4\u30f3\u30bf\u304c\u6307\u3057\u793a\u3059\u5024\u3092\u6271\u3046\u306b\u306f * \u3092\u4ed8\u3051\u3066\u30c7\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001 \u53c2\u7167\u3067\u306f\u4f55\u3082\u4ed8\u4e0e\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u305f\u3081\u3001\u898b\u305f\u76ee\u4e0a\u3067\u306f\u5024\u578b\u306e\u3088\u3046\u306b\u4f7f\u3046\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002","title":"2.4. \u30dd\u30a4\u30f3\u30bf"},{"location":"ch02-04-pointers/#_1","text":"\u30dd\u30a4\u30f3\u30bf\u3068\u3044\u3046\u306e\u306f\u4ed6\u306e\u5909\u6570\u3092\u53c2\u7167\u3059\u308b\u4ed5\u7d44\u307f\u306e1\u3064\u3067\u3059\u3002 Windows \u306e\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u3084 Linux \u306e\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3068\u540c\u3058\u3088\u3046\u306a\u6a5f\u80fd\u3067\u3059\u3002 int x = 5 ; int * p = & x ; int* \u3068\u66f8\u304f\u3068 int \u578b\u306e\u5909\u6570\u3092\u6307\u3059\u30dd\u30a4\u30f3\u30bf\u578b\u3068\u306a\u308a\u307e\u3059\u3002 &x \u3068\u3044\u3046\u306e\u306f x \u3092\u6307\u3059\u30dd\u30a4\u30f3\u30bf\u3092\u5f97\u308b\u305f\u3081\u306e\u6f14\u7b97\u3067\u3059\u3002","title":"\u30dd\u30a4\u30f3\u30bf"},{"location":"ch02-04-pointers/#nullptr","text":"\u3069\u306e\u5909\u6570\u3082\u53c2\u7167\u3057\u3066\u3044\u306a\u3044\u30dd\u30a4\u30f3\u30bf\u306e\u3053\u3068\u3092\u30cc\u30eb\u30dd\u30a4\u30f3\u30bf\u3068\u547c\u3073\u307e\u3059\u3002C++\u3067\u306f\u30cc\u30eb\u30dd\u30a4\u30f3\u30bf\u3092\u8868\u3059\u30ad\u30fc\u30ef\u30fc\u30c9\u3068\u3057\u3066 nullptr \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002 int * p = nullptr ;","title":"nullptr"},{"location":"ch02-04-pointers/#_2","text":"\u30dd\u30a4\u30f3\u30bf\u304c\u6307\u3059\u5909\u6570\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002 int x = 5 ; int * p = & x ; int y = * p ; \u5909\u6570\u304b\u3089\u30dd\u30a4\u30f3\u30bf\u3092\u5f97\u308b\u3068\u304d\u306b\u306f & \u3092\u4ed8\u3051\u3001\u30dd\u30a4\u30f3\u30bf\u304b\u3089\u5024\u3092\u5f97\u308b\u306b\u306f * \u3092\u4ed8\u3051\u307e\u3059\u3002","title":"\u30c7\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\uff08\u9006\u53c2\u7167\uff09"},{"location":"ch02-04-pointers/#const","text":"\u30dd\u30a4\u30f3\u30bf\u578b\u306b const \u3092\u4ed8\u3051\u308b\u5834\u5408\u3001 const \u306e\u4ed8\u3051\u308b\u4f4d\u7f6e\u306b\u3088\u3063\u3066\u610f\u5473\u5408\u3044\u304c\u5909\u308f\u308a\u307e\u3059\u3002 * \u306e\u524d\u306b const \u3092\u4ed8\u3051\u308b\u3068\u3001\u30dd\u30a4\u30f3\u30bf\u304c\u6307\u3057\u793a\u3059\u5024\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002 int x = 123 ; const int * p = & x ; * p = 456 ; // \u30a8\u30e9\u30fc * \u306e\u5f8c\u306b const \u3092\u4ed8\u3051\u308b\u3068\u3001\u30dd\u30a4\u30f3\u30bf\u81ea\u8eab\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002 int x = 123 ; int * const p = & x ; p = nullptr ; // \u30a8\u30e9\u30fc \u4f75\u7528\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 const int * const p = & x ;","title":"const\u30dd\u30a4\u30f3\u30bf"},{"location":"ch02-04-pointers/#_3","text":"\u30dd\u30a4\u30f3\u30bf\u306b\u4f3c\u305f\u4ed5\u7d44\u307f\u3068\u3057\u3066\u53c2\u7167\u304c\u3042\u308a\u307e\u3059\u3002 int x = 100 ; int * p = & x ; // p\u306f\u30dd\u30a4\u30f3\u30bf\u578b int & r = x ; // r\u306f\u53c2\u7167\u578b * p = 200 ; r = 200 ; int& \u3068\u66f8\u304f\u3068 int \u306e\u53c2\u7167\u578b\u3068\u306a\u308a\u307e\u3059\u3002 \u30dd\u30a4\u30f3\u30bf\u304c\u6307\u3057\u793a\u3059\u5024\u3092\u6271\u3046\u306b\u306f * \u3092\u4ed8\u3051\u3066\u30c7\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001 \u53c2\u7167\u3067\u306f\u4f55\u3082\u4ed8\u4e0e\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u305f\u3081\u3001\u898b\u305f\u76ee\u4e0a\u3067\u306f\u5024\u578b\u306e\u3088\u3046\u306b\u4f7f\u3046\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002","title":"\u53c2\u7167"},{"location":"ch02-05-comments/","text":"\u30b3\u30e1\u30f3\u30c8 \u00b6 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5185\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u66f8\u304d\u305f\u3044\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 // '//' \u3067\u59cb\u307e\u308b\u884c\u306f\u30b3\u30e1\u30f3\u30c8\u3068\u898b\u306a\u3055\u308c\u307e\u3059 int x = 5 ; // \u3053\u306e\u3088\u3046\u306b // \u8907\u6570\u884c\u306b\u307e\u305f\u304c\u3063\u3066 // \u30b3\u30e1\u30f3\u30c8\u3092\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059 /* ... */ \u3067\u56f2\u307e\u308c\u305f\u884c\u3082\u30b3\u30e1\u30f3\u30c8\u3068\u898b\u306a\u3055\u308c\u307e\u3059\u3002 \u8907\u6570\u884c\u306b\u307e\u305f\u304c\u308b\u30b3\u30e1\u30f3\u30c8\u3092\u66f8\u304f\u6642\u306b\u4fbf\u5229\u3067\u3059\u3002 /* * \u9593\u306b\u73fe\u308c\u308b '*' \u306f\u66f8\u304b\u306a\u304f\u3066\u3082\u3044\u3044\u3067\u3059\u304c * \u7fd2\u6163\u7684\u306b\u66f8\u304f\u3053\u3068\u306e\u307b\u3046\u304c\u591a\u3044\u3067\u3059 */ /* ... */ \u306f\u5165\u308c\u5b50\u306b\u3057\u3066\u4f7f\u3046\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u306e\u3067\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002 /* /* \u3053\u308c\u306f\u4e0d\u6b63\u306a\u30b3\u30e1\u30f3\u30c8\u3067\u3059 */ */","title":"2.5. \u30b3\u30e1\u30f3\u30c8"},{"location":"ch02-05-comments/#_1","text":"\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5185\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u66f8\u304d\u305f\u3044\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 // '//' \u3067\u59cb\u307e\u308b\u884c\u306f\u30b3\u30e1\u30f3\u30c8\u3068\u898b\u306a\u3055\u308c\u307e\u3059 int x = 5 ; // \u3053\u306e\u3088\u3046\u306b // \u8907\u6570\u884c\u306b\u307e\u305f\u304c\u3063\u3066 // \u30b3\u30e1\u30f3\u30c8\u3092\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059 /* ... */ \u3067\u56f2\u307e\u308c\u305f\u884c\u3082\u30b3\u30e1\u30f3\u30c8\u3068\u898b\u306a\u3055\u308c\u307e\u3059\u3002 \u8907\u6570\u884c\u306b\u307e\u305f\u304c\u308b\u30b3\u30e1\u30f3\u30c8\u3092\u66f8\u304f\u6642\u306b\u4fbf\u5229\u3067\u3059\u3002 /* * \u9593\u306b\u73fe\u308c\u308b '*' \u306f\u66f8\u304b\u306a\u304f\u3066\u3082\u3044\u3044\u3067\u3059\u304c * \u7fd2\u6163\u7684\u306b\u66f8\u304f\u3053\u3068\u306e\u307b\u3046\u304c\u591a\u3044\u3067\u3059 */ /* ... */ \u306f\u5165\u308c\u5b50\u306b\u3057\u3066\u4f7f\u3046\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u306e\u3067\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002 /* /* \u3053\u308c\u306f\u4e0d\u6b63\u306a\u30b3\u30e1\u30f3\u30c8\u3067\u3059 */ */","title":"\u30b3\u30e1\u30f3\u30c8"},{"location":"ch02-06-control-flow/","text":"\u5236\u5fa1\u6587 \u00b6 if \u00b6 \u6761\u4ef6\u5206\u5c90\u3092\u3057\u305f\u3044\u6642\u306b\u306f if \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 int x = 5 ; if ( x == 5 ) { ... } if \u306e\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u304b\u3063\u305f\u5834\u5408\u306b\u4f55\u304b\u51e6\u7406\u3092\u3057\u305f\u3051\u308c\u3070 else \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 int x = 5 ; if ( x == 5 ) { ... } else { ... } \u3055\u3089\u306b\u5225\u306e\u6761\u4ef6\u3067\u51e6\u7406\u3092\u5206\u5c90\u3057\u305f\u3051\u308c\u3070 else if \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 int x = 5 ; if ( x == 5 ) { ... } else if ( x == 6 ) { ... } else { ... } switch \u00b6 \u4e00\u3064\u306e\u5909\u6570\u306e\u5024\u3092\u8abf\u3079\u306a\u304c\u3089\u5206\u5c90\u3059\u308b\u3088\u3046\u306a\u51e6\u7406\u3092\u66f8\u304d\u305f\u3044\u5834\u5408\u306f switch \u6587\u3092\u4f7f\u3044\u307e\u3059\u3002 switch ( x ) { case 0 : // x == 0 \u306e\u3068\u304d\u306e\u51e6\u7406 break ; case 1 : // x == 1 \u306e\u3068\u304d\u306e\u51e6\u7406 break ; default : // x \u304c\u305d\u308c\u4ee5\u5916\u306e\u3068\u304d\u306e\u51e6\u7406 break ; } \u305f\u3060\u3057 switch \u6587\u304c\u4f7f\u7528\u3067\u304d\u308b\u306e\u306f\u57fa\u672c\u578b\u306e\u307f\u3067\u3059\u3002 \u4e0a\u8a18\u306e\u69cb\u6587\u306f if \u3067\u66f8\u304d\u76f4\u3059\u3068\u6b21\u3068\u7b49\u4fa1\u306b\u306a\u308a\u307e\u3059\u3002 if ( x == 0 ) { // x == 0 \u306e\u3068\u304d\u306e\u51e6\u7406 } else if ( x == 1 ) { // x == 1 \u306e\u3068\u304d\u306e\u51e6\u7406 } else { // x \u304c\u305d\u308c\u4ee5\u5916\u306e\u3068\u304d\u306e\u51e6\u7406 } \u305f\u3060\u3057 switch \u6587\u306e\u307b\u3046\u304c if \u3088\u308a\u3082\u6bd4\u8f03\u56de\u6570\u304c\u5c11\u306a\u3044\u305f\u3081\u52b9\u7387\u7684\u3067\u3059\u3002 if \u306f\u307e\u305a\u306f\u3058\u3081\u306b x == 0 \u304c true \u304b\u3069\u3046\u304b\u3092\u8abf\u3079 false \u3067\u3042\u308c\u3070 \u6b21\u306b x == 1 \u3092\u8a55\u4fa1\u3057\u307e\u3059\u304c\u3001 switch \u6587\u306f\u3044\u304d\u306a\u308a\u7279\u5b9a\u306e case \u306b\u30b8\u30e3\u30f3\u30d7\u3057\u307e\u3059\u3002 \u30d5\u30a9\u30fc\u30eb\u30b9\u30eb\u30fc \u00b6 switch \u306e\u5404 case \u5185\u306b\u66f8\u304b\u308c\u3066\u3044\u308b break \u306f\u66f8\u304b\u306a\u304f\u3066\u3082\u3088\u3044\u306e\u3067\u3059\u304c\u3001 \u305d\u306e\u5834\u5408\u632f\u308b\u821e\u3044\u304c\u5909\u308f\u308a\u307e\u3059\u3002 switch ( x ) { case 0 : // x == 0 \u306e\u3068\u304d\u306e\u51e6\u7406 case 1 : // x == 1 \u306e\u3068\u304d\u306e\u51e6\u7406 default : // x \u304c\u305d\u308c\u4ee5\u5916\u306e\u3068\u304d\u306e\u51e6\u7406 } break \u3092\u66f8\u3044\u305f\u5834\u5408\u306f switch \u6587\u306e\u51e6\u7406\u306f\u305d\u3053\u3067\u7d42\u308f\u308a\u307e\u3059\u304c\u3001 break \u3092\u66f8\u304b\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u305d\u306e\u307e\u307e\u4e0b\u306e case \u306b\u51e6\u7406\u304c\u6d41\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002 \u3064\u307e\u308a\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f x == 0 \u3067\u3042\u308c\u3070 case 0 \u5185\u306e\u51e6\u7406\u3092\u884c\u3063\u305f\u5f8c\u306b case 1 \u5185\u306e\u51e6\u7406\u3092\u884c\u3044\u3001\u6700\u5f8c\u306b default \u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002 x == 1 \u3067\u3042\u308c\u3070\u540c\u69d8\u306e\u632f\u308b\u821e\u3044\u304c case 1 \u304b\u3089\u59cb\u307e\u308a\u307e\u3059\u3002 \u3053\u306e\u3088\u3046\u306a switch \u6587\u306e\u4ed5\u69d8\u3092\u30d5\u30a9\u30fc\u30eb\u30b9\u30eb\u30fc\u3068\u8a00\u3044\u307e\u3059\u3002 \u3053\u308c\u306f case 0 \u3068 case 1 \u306e\u51e6\u7406\u304c\u540c\u3058\u3082\u306e\u306b\u306a\u308b\u5834\u5408\u306b\u4f7f\u7528\u3059\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002 switch ( x ) { case 0 : case 1 : // x == 0 \u307e\u305f\u306f x == 1 \u306e\u3068\u304d\u306e\u51e6\u7406 default : // x \u304c\u305d\u308c\u4ee5\u5916\u306e\u3068\u304d\u306e\u51e6\u7406 } \u305d\u308c\u4ee5\u5916\u306e\u30b1\u30fc\u30b9\u3067\u30d5\u30a9\u30fc\u30eb\u30b9\u30eb\u30fc\u3092\u3055\u305b\u308b\u30b7\u30fc\u30f3\u306f\u307e\u305a\u306a\u3044\u305f\u3081\u3001 break \u3092\u5fd8\u308c\u305a\u306b\u4ed8\u3051\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 while \u00b6 while \u306f () \u306b\u6e21\u3055\u308c\u305f\u6761\u4ef6\u304c true \u3067\u3042\u308b\u9650\u308a { ... } \u5185\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3057\u7d9a\u3051\u307e\u3059\u3002 int x = 5 ; bool done = false ; while ( ! done ) { x += x - 3 ; std :: cout << x << std :: endl ; if ( x % 5 == 0 ) { done = true ; } } for \u00b6 for \u306f\u30eb\u30fc\u30d7\u3059\u308b\u305f\u3073\u306b\u5909\u5316\u3059\u308b\u5909\u6570\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 for ( int i = 0 ; i < 10 ; ++ i ) { std :: cout << i << std :: endl ; } i \u306f\u30eb\u30fc\u30d7\u3059\u308b\u305f\u3073\u306b 0, 1, 2, ..., 9 \u3068\u5024\u304c\u5909\u5316\u3057\u7d9a\u3051\u307e\u3059\u3002 for (int i = 0; i < 10; ++i) \u3068\u3044\u3046\u306e\u306f i \u306b 0 \u3092\u8a2d\u5b9a\u3057\u3066 i < 10 \u3092\u6e80\u305f\u3059\u307e\u3067 i \u3092 +1 \u3057\u306a\u304c\u3089\u30eb\u30fc\u30d7\u3092\u7d99\u7d9a\u3059\u308b\u3068\u3044\u3046\u610f\u5473\u306b\u306a\u308a\u307e\u3059\u3002 \u914d\u5217\u306e\u30eb\u30fc\u30d7 \u00b6 \u914d\u5217\u306e\u30eb\u30fc\u30d7\u306f for \u3092\u4f7f\u3063\u3066\u6b21\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 int x [] = { 0 , 1 , 2 , 3 , 4 }; for ( auto e : x ) { std :: cout << e << std :: endl ; } e \u306b\u306f 0 \u304b\u3089 4 \u304c\u9806\u306b\u4ee3\u5165\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002 std::array \u3067\u3082\u540c\u3058\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 for \u306e\u4e2d\u3067\u6dfb\u5b57\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\u6dfb\u5b57\u3092\u30eb\u30fc\u30d7\u3057\u3066\u914d\u5217\u306e\u8981\u7d20\u3092\u305f\u3069\u308a\u307e\u3059\u3002 int x [] = { 0 , 1 , 2 , 3 , 4 }; for ( int i = 0 ; i < 5 ; ++ i ) { std :: cout << x [ i ] << std :: endl ; }","title":"2.6. \u5236\u5fa1\u6587"},{"location":"ch02-06-control-flow/#_1","text":"","title":"\u5236\u5fa1\u6587"},{"location":"ch02-06-control-flow/#if","text":"\u6761\u4ef6\u5206\u5c90\u3092\u3057\u305f\u3044\u6642\u306b\u306f if \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 int x = 5 ; if ( x == 5 ) { ... } if \u306e\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u304b\u3063\u305f\u5834\u5408\u306b\u4f55\u304b\u51e6\u7406\u3092\u3057\u305f\u3051\u308c\u3070 else \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 int x = 5 ; if ( x == 5 ) { ... } else { ... } \u3055\u3089\u306b\u5225\u306e\u6761\u4ef6\u3067\u51e6\u7406\u3092\u5206\u5c90\u3057\u305f\u3051\u308c\u3070 else if \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 int x = 5 ; if ( x == 5 ) { ... } else if ( x == 6 ) { ... } else { ... }","title":"if"},{"location":"ch02-06-control-flow/#switch","text":"\u4e00\u3064\u306e\u5909\u6570\u306e\u5024\u3092\u8abf\u3079\u306a\u304c\u3089\u5206\u5c90\u3059\u308b\u3088\u3046\u306a\u51e6\u7406\u3092\u66f8\u304d\u305f\u3044\u5834\u5408\u306f switch \u6587\u3092\u4f7f\u3044\u307e\u3059\u3002 switch ( x ) { case 0 : // x == 0 \u306e\u3068\u304d\u306e\u51e6\u7406 break ; case 1 : // x == 1 \u306e\u3068\u304d\u306e\u51e6\u7406 break ; default : // x \u304c\u305d\u308c\u4ee5\u5916\u306e\u3068\u304d\u306e\u51e6\u7406 break ; } \u305f\u3060\u3057 switch \u6587\u304c\u4f7f\u7528\u3067\u304d\u308b\u306e\u306f\u57fa\u672c\u578b\u306e\u307f\u3067\u3059\u3002 \u4e0a\u8a18\u306e\u69cb\u6587\u306f if \u3067\u66f8\u304d\u76f4\u3059\u3068\u6b21\u3068\u7b49\u4fa1\u306b\u306a\u308a\u307e\u3059\u3002 if ( x == 0 ) { // x == 0 \u306e\u3068\u304d\u306e\u51e6\u7406 } else if ( x == 1 ) { // x == 1 \u306e\u3068\u304d\u306e\u51e6\u7406 } else { // x \u304c\u305d\u308c\u4ee5\u5916\u306e\u3068\u304d\u306e\u51e6\u7406 } \u305f\u3060\u3057 switch \u6587\u306e\u307b\u3046\u304c if \u3088\u308a\u3082\u6bd4\u8f03\u56de\u6570\u304c\u5c11\u306a\u3044\u305f\u3081\u52b9\u7387\u7684\u3067\u3059\u3002 if \u306f\u307e\u305a\u306f\u3058\u3081\u306b x == 0 \u304c true \u304b\u3069\u3046\u304b\u3092\u8abf\u3079 false \u3067\u3042\u308c\u3070 \u6b21\u306b x == 1 \u3092\u8a55\u4fa1\u3057\u307e\u3059\u304c\u3001 switch \u6587\u306f\u3044\u304d\u306a\u308a\u7279\u5b9a\u306e case \u306b\u30b8\u30e3\u30f3\u30d7\u3057\u307e\u3059\u3002","title":"switch"},{"location":"ch02-06-control-flow/#_2","text":"switch \u306e\u5404 case \u5185\u306b\u66f8\u304b\u308c\u3066\u3044\u308b break \u306f\u66f8\u304b\u306a\u304f\u3066\u3082\u3088\u3044\u306e\u3067\u3059\u304c\u3001 \u305d\u306e\u5834\u5408\u632f\u308b\u821e\u3044\u304c\u5909\u308f\u308a\u307e\u3059\u3002 switch ( x ) { case 0 : // x == 0 \u306e\u3068\u304d\u306e\u51e6\u7406 case 1 : // x == 1 \u306e\u3068\u304d\u306e\u51e6\u7406 default : // x \u304c\u305d\u308c\u4ee5\u5916\u306e\u3068\u304d\u306e\u51e6\u7406 } break \u3092\u66f8\u3044\u305f\u5834\u5408\u306f switch \u6587\u306e\u51e6\u7406\u306f\u305d\u3053\u3067\u7d42\u308f\u308a\u307e\u3059\u304c\u3001 break \u3092\u66f8\u304b\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u305d\u306e\u307e\u307e\u4e0b\u306e case \u306b\u51e6\u7406\u304c\u6d41\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002 \u3064\u307e\u308a\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f x == 0 \u3067\u3042\u308c\u3070 case 0 \u5185\u306e\u51e6\u7406\u3092\u884c\u3063\u305f\u5f8c\u306b case 1 \u5185\u306e\u51e6\u7406\u3092\u884c\u3044\u3001\u6700\u5f8c\u306b default \u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002 x == 1 \u3067\u3042\u308c\u3070\u540c\u69d8\u306e\u632f\u308b\u821e\u3044\u304c case 1 \u304b\u3089\u59cb\u307e\u308a\u307e\u3059\u3002 \u3053\u306e\u3088\u3046\u306a switch \u6587\u306e\u4ed5\u69d8\u3092\u30d5\u30a9\u30fc\u30eb\u30b9\u30eb\u30fc\u3068\u8a00\u3044\u307e\u3059\u3002 \u3053\u308c\u306f case 0 \u3068 case 1 \u306e\u51e6\u7406\u304c\u540c\u3058\u3082\u306e\u306b\u306a\u308b\u5834\u5408\u306b\u4f7f\u7528\u3059\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002 switch ( x ) { case 0 : case 1 : // x == 0 \u307e\u305f\u306f x == 1 \u306e\u3068\u304d\u306e\u51e6\u7406 default : // x \u304c\u305d\u308c\u4ee5\u5916\u306e\u3068\u304d\u306e\u51e6\u7406 } \u305d\u308c\u4ee5\u5916\u306e\u30b1\u30fc\u30b9\u3067\u30d5\u30a9\u30fc\u30eb\u30b9\u30eb\u30fc\u3092\u3055\u305b\u308b\u30b7\u30fc\u30f3\u306f\u307e\u305a\u306a\u3044\u305f\u3081\u3001 break \u3092\u5fd8\u308c\u305a\u306b\u4ed8\u3051\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u30d5\u30a9\u30fc\u30eb\u30b9\u30eb\u30fc"},{"location":"ch02-06-control-flow/#while","text":"while \u306f () \u306b\u6e21\u3055\u308c\u305f\u6761\u4ef6\u304c true \u3067\u3042\u308b\u9650\u308a { ... } \u5185\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3057\u7d9a\u3051\u307e\u3059\u3002 int x = 5 ; bool done = false ; while ( ! done ) { x += x - 3 ; std :: cout << x << std :: endl ; if ( x % 5 == 0 ) { done = true ; } }","title":"while"},{"location":"ch02-06-control-flow/#for","text":"for \u306f\u30eb\u30fc\u30d7\u3059\u308b\u305f\u3073\u306b\u5909\u5316\u3059\u308b\u5909\u6570\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 for ( int i = 0 ; i < 10 ; ++ i ) { std :: cout << i << std :: endl ; } i \u306f\u30eb\u30fc\u30d7\u3059\u308b\u305f\u3073\u306b 0, 1, 2, ..., 9 \u3068\u5024\u304c\u5909\u5316\u3057\u7d9a\u3051\u307e\u3059\u3002 for (int i = 0; i < 10; ++i) \u3068\u3044\u3046\u306e\u306f i \u306b 0 \u3092\u8a2d\u5b9a\u3057\u3066 i < 10 \u3092\u6e80\u305f\u3059\u307e\u3067 i \u3092 +1 \u3057\u306a\u304c\u3089\u30eb\u30fc\u30d7\u3092\u7d99\u7d9a\u3059\u308b\u3068\u3044\u3046\u610f\u5473\u306b\u306a\u308a\u307e\u3059\u3002","title":"for"},{"location":"ch02-06-control-flow/#_3","text":"\u914d\u5217\u306e\u30eb\u30fc\u30d7\u306f for \u3092\u4f7f\u3063\u3066\u6b21\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 int x [] = { 0 , 1 , 2 , 3 , 4 }; for ( auto e : x ) { std :: cout << e << std :: endl ; } e \u306b\u306f 0 \u304b\u3089 4 \u304c\u9806\u306b\u4ee3\u5165\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002 std::array \u3067\u3082\u540c\u3058\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 for \u306e\u4e2d\u3067\u6dfb\u5b57\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\u6dfb\u5b57\u3092\u30eb\u30fc\u30d7\u3057\u3066\u914d\u5217\u306e\u8981\u7d20\u3092\u305f\u3069\u308a\u307e\u3059\u3002 int x [] = { 0 , 1 , 2 , 3 , 4 }; for ( int i = 0 ; i < 5 ; ++ i ) { std :: cout << x [ i ] << std :: endl ; }","title":"\u914d\u5217\u306e\u30eb\u30fc\u30d7"},{"location":"ch03-01-arrays/","text":"\u914d\u5217 \u00b6 \u914d\u5217\u306f\u540c\u4e00\u306e\u578b\u3092\u6301\u3064\u8907\u6570\u306e\u5024\u3092\u307e\u3068\u3081\u3066\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u578b\u3067\u3059\u3002 \u4f7f\u3044\u65b9\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002 int x [ 5 ] = { 0 , 1 , 2 , 3 , 4 }; \u3053\u308c\u3067 5 \u8981\u7d20\u306e\u5024\u3092\u6301\u3064\u914d\u5217\u304c\u5ba3\u8a00\u3055\u308c\u307e\u3059\u3002 \u8981\u7d20\u53c2\u7167 \u00b6 \u914d\u5217\u306e\u8981\u7d20\u3092\u53c2\u7167\u3059\u308b\u306b\u306f\u914d\u5217\u306e\u4f55\u756a\u76ee\u306e\u8981\u7d20\u306a\u306e\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u6570\u3048\u306e\u59cb\u307e\u308a\u306f 0 \u304b\u3089\u306b\u306a\u308a\u307e\u3059\u3002 int x [ 5 ] = { 0 , 1 , 2 , 3 , 4 }; int y = x [ 2 ]; // 2 \u521d\u671f\u5316\u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3 \u00b6 \u914d\u5217\u306e\u5ba3\u8a00\u3068\u540c\u6642\u306b\u8981\u7d20\u3092\u8a2d\u5b9a\u3059\u308b\u5834\u5408\u306f\u8981\u7d20\u6570\u306e\u6307\u5b9a\u304c\u7701\u7565\u3067\u304d\u307e\u3059\u3002 int x [] = { 0 , 1 , 2 , 3 , 4 , 5 }; \u914d\u5217\u306e\u5ba3\u8a00\u5f8c\u306b\u8981\u7d20\u3092\u8a2d\u5b9a\u3059\u308b\u5834\u5408\u306f\u8981\u7d20\u6570\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002 int x [ 5 ]; x [ 0 ] = 0 ; x [ 1 ] = 1 ; x [ 2 ] = 2 ; x [ 3 ] = 3 ; x [ 4 ] = 4 ; \u8981\u7d20\u6570\u306b\u6bd4\u3079\u3066\u8a2d\u5b9a\u3057\u305f\u8981\u7d20\u306e\u500b\u6570\u304c\u5c11\u306a\u3044\u5834\u5408\u306f\u6b8b\u308a\u306e\u8981\u7d20\u304c\u30bc\u30ed\u3067\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u3002 int x [ 5 ] = { 0 , 1 , 2 }; // x[3], x[4] \u306f\u30bc\u30ed\u3067\u521d\u671f\u5316 \u8981\u7d20\u3092\u5168\u304f\u6307\u5b9a\u3057\u306a\u3044\u3068\u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u30bc\u30ed\u3067\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u3002 int x [ 5 ] = {}; \u3053\u308c\u304c\u4e00\u756a\u624b\u8efd\u306a\u521d\u671f\u5316\u65b9\u6cd5\u3067\u3059\u3002 std::array \u00b6 \u3088\u308a\u9ad8\u6a5f\u80fd\u306a\u914d\u5217\u3092\u4f7f\u7528\u3057\u305f\u3044\u5834\u5408\u306f std::array \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 #include <array> std :: array < int , 5 > x = { 0 , 1 , 2 , 3 , 4 }; x \u306f\u8981\u7d20\u6570\u304c 5 \u3067\u3042\u308b\u3088\u3046\u306a int \u306e\u914d\u5217\u306b\u306a\u308a\u307e\u3059\u3002 std::array \u3092\u4f7f\u7528\u3059\u308b\u306b\u306f <array> \u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002 \u8981\u7d20\u53c2\u7167\u306f\u901a\u5e38\u306e\u914d\u5217\u3068\u540c\u3058\u3088\u3046\u306b\u3067\u304d\u307e\u3059\u3002 x [ 2 ] = 10 ; x.size() \u3068\u3059\u308b\u3068\u8981\u7d20\u6570\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002 auto size = x . size (); // 5 \u901a\u5e38\u306e\u914d\u5217\u304b\u3089\u306f\u8981\u7d20\u6570\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u305f\u3081\u3001 \u914d\u5217\u3068\u8981\u7d20\u6570\u3092\u4fdd\u5b58\u3057\u305f\u5909\u6570\u306e2\u3064\u3092\u6301\u3061\u56de\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 std::array \u3092\u4f7f\u3048\u3070\u305d\u308c\u3089\u3092\u3072\u3068\u307e\u3068\u3081\u306b\u3057\u3066\u6271\u3048\u308b\u306e\u3067\u4fbf\u5229\u3067\u3059\u3002","title":"3.1. \u914d\u5217"},{"location":"ch03-01-arrays/#_1","text":"\u914d\u5217\u306f\u540c\u4e00\u306e\u578b\u3092\u6301\u3064\u8907\u6570\u306e\u5024\u3092\u307e\u3068\u3081\u3066\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u578b\u3067\u3059\u3002 \u4f7f\u3044\u65b9\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002 int x [ 5 ] = { 0 , 1 , 2 , 3 , 4 }; \u3053\u308c\u3067 5 \u8981\u7d20\u306e\u5024\u3092\u6301\u3064\u914d\u5217\u304c\u5ba3\u8a00\u3055\u308c\u307e\u3059\u3002","title":"\u914d\u5217"},{"location":"ch03-01-arrays/#_2","text":"\u914d\u5217\u306e\u8981\u7d20\u3092\u53c2\u7167\u3059\u308b\u306b\u306f\u914d\u5217\u306e\u4f55\u756a\u76ee\u306e\u8981\u7d20\u306a\u306e\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u6570\u3048\u306e\u59cb\u307e\u308a\u306f 0 \u304b\u3089\u306b\u306a\u308a\u307e\u3059\u3002 int x [ 5 ] = { 0 , 1 , 2 , 3 , 4 }; int y = x [ 2 ]; // 2","title":"\u8981\u7d20\u53c2\u7167"},{"location":"ch03-01-arrays/#_3","text":"\u914d\u5217\u306e\u5ba3\u8a00\u3068\u540c\u6642\u306b\u8981\u7d20\u3092\u8a2d\u5b9a\u3059\u308b\u5834\u5408\u306f\u8981\u7d20\u6570\u306e\u6307\u5b9a\u304c\u7701\u7565\u3067\u304d\u307e\u3059\u3002 int x [] = { 0 , 1 , 2 , 3 , 4 , 5 }; \u914d\u5217\u306e\u5ba3\u8a00\u5f8c\u306b\u8981\u7d20\u3092\u8a2d\u5b9a\u3059\u308b\u5834\u5408\u306f\u8981\u7d20\u6570\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002 int x [ 5 ]; x [ 0 ] = 0 ; x [ 1 ] = 1 ; x [ 2 ] = 2 ; x [ 3 ] = 3 ; x [ 4 ] = 4 ; \u8981\u7d20\u6570\u306b\u6bd4\u3079\u3066\u8a2d\u5b9a\u3057\u305f\u8981\u7d20\u306e\u500b\u6570\u304c\u5c11\u306a\u3044\u5834\u5408\u306f\u6b8b\u308a\u306e\u8981\u7d20\u304c\u30bc\u30ed\u3067\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u3002 int x [ 5 ] = { 0 , 1 , 2 }; // x[3], x[4] \u306f\u30bc\u30ed\u3067\u521d\u671f\u5316 \u8981\u7d20\u3092\u5168\u304f\u6307\u5b9a\u3057\u306a\u3044\u3068\u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u30bc\u30ed\u3067\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u3002 int x [ 5 ] = {}; \u3053\u308c\u304c\u4e00\u756a\u624b\u8efd\u306a\u521d\u671f\u5316\u65b9\u6cd5\u3067\u3059\u3002","title":"\u521d\u671f\u5316\u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3"},{"location":"ch03-01-arrays/#stdarray","text":"\u3088\u308a\u9ad8\u6a5f\u80fd\u306a\u914d\u5217\u3092\u4f7f\u7528\u3057\u305f\u3044\u5834\u5408\u306f std::array \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 #include <array> std :: array < int , 5 > x = { 0 , 1 , 2 , 3 , 4 }; x \u306f\u8981\u7d20\u6570\u304c 5 \u3067\u3042\u308b\u3088\u3046\u306a int \u306e\u914d\u5217\u306b\u306a\u308a\u307e\u3059\u3002 std::array \u3092\u4f7f\u7528\u3059\u308b\u306b\u306f <array> \u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002 \u8981\u7d20\u53c2\u7167\u306f\u901a\u5e38\u306e\u914d\u5217\u3068\u540c\u3058\u3088\u3046\u306b\u3067\u304d\u307e\u3059\u3002 x [ 2 ] = 10 ; x.size() \u3068\u3059\u308b\u3068\u8981\u7d20\u6570\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002 auto size = x . size (); // 5 \u901a\u5e38\u306e\u914d\u5217\u304b\u3089\u306f\u8981\u7d20\u6570\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u305f\u3081\u3001 \u914d\u5217\u3068\u8981\u7d20\u6570\u3092\u4fdd\u5b58\u3057\u305f\u5909\u6570\u306e2\u3064\u3092\u6301\u3061\u56de\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 std::array \u3092\u4f7f\u3048\u3070\u305d\u308c\u3089\u3092\u3072\u3068\u307e\u3068\u3081\u306b\u3057\u3066\u6271\u3048\u308b\u306e\u3067\u4fbf\u5229\u3067\u3059\u3002","title":"std::array"},{"location":"ch03-02-strings/","text":"\u6587\u5b57\u5217 \u00b6 \u6587\u5b57\u5217\u3092\u6271\u3046\u306b\u306f std::string \u3068\u3044\u3046\u578b\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 #include <string> std :: string s = \"Hello\" ; std::string \u306f\u6587\u5b57\u5217\u30c7\u30fc\u30bf\u3092 char \u306e\u914d\u5217\u3068\u3057\u3066\u6271\u3046\u305f\u3081 \u914d\u5217\u306e\u3088\u3046\u306b\u64cd\u4f5c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 std :: string s = \"Hello\" ; s [ 0 ]; // 'H' s [ 1 ]; // 'e' s [ 2 ]; // 'l' s [ 3 ]; // 'l' s [ 4 ]; // 'o' s.size() \u3068\u3059\u308b\u3068\u6587\u5b57\u5217\u6570\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002 s . size (); // 5","title":"3.2. \u6587\u5b57\u5217"},{"location":"ch03-02-strings/#_1","text":"\u6587\u5b57\u5217\u3092\u6271\u3046\u306b\u306f std::string \u3068\u3044\u3046\u578b\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 #include <string> std :: string s = \"Hello\" ; std::string \u306f\u6587\u5b57\u5217\u30c7\u30fc\u30bf\u3092 char \u306e\u914d\u5217\u3068\u3057\u3066\u6271\u3046\u305f\u3081 \u914d\u5217\u306e\u3088\u3046\u306b\u64cd\u4f5c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 std :: string s = \"Hello\" ; s [ 0 ]; // 'H' s [ 1 ]; // 'e' s [ 2 ]; // 'l' s [ 3 ]; // 'l' s [ 4 ]; // 'o' s.size() \u3068\u3059\u308b\u3068\u6587\u5b57\u5217\u6570\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002 s . size (); // 5","title":"\u6587\u5b57\u5217"},{"location":"ch03-03-tuples/","text":"\u30bf\u30d7\u30eb \u00b6 \u30bf\u30d7\u30eb\u306f\u8907\u6570\u306e\u5024\u3092\u3072\u3068\u307e\u3068\u3081\u306b\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u578b\u3067\u3059\u3002 \u914d\u5217\u3068\u4f3c\u305f\u90e8\u5206\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u914d\u5217\u3068\u7570\u306a\u308a\u5404\u8981\u7d20\u306f\u540c\u3058\u578b\u3067\u3042\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u30bf\u30d7\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 #include <tuple> std :: tuple < std :: string , int > person { \"Bob\" , 20 }; < ... > \u306e\u90e8\u5206\u306b\u5404\u8981\u7d20\u306e\u578b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u8981\u7d20\u6570\u306f\u3044\u304f\u3064\u3067\u3082\u5897\u3084\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 std :: tuple < std :: string , int , std :: string > person { \"Bob\" , 20 , \"USA\" }; \u8981\u7d20\u53c2\u7167 \u00b6 \u914d\u5217\u3068\u540c\u3058\u3088\u3046\u306b\u30bf\u30d7\u30eb\u3082\u8981\u7d20\u53c2\u7167\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 std :: get < 0 > ( person ); // \"Bob\" std :: get < 1 > ( person ); // 20 \u521d\u671f\u5316\u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3 \u00b6 \u30bf\u30d7\u30eb\u306f\u521d\u671f\u5316\u65b9\u6cd5\u306b\u5e7e\u3064\u304b\u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002 std :: tuple < std :: string , int > person { \"Bob\" , 20 }; std :: tuple < std :: string , int > person ( \"Bob\" , 20 ); std :: tuple < std :: string , int > person = std :: make_tuple ( \"Bob\" , 20 ); std::tie() \u00b6 std::tie() \u3068\u3044\u3046\u95a2\u6570\u3092\u4f7f\u3046\u3068\u30bf\u30d7\u30eb\u306e\u8981\u7d20\u3092\u500b\u5225\u306e\u5909\u6570\u306b \u307e\u3068\u3081\u3066\u4ee3\u5165\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 std :: tuple < std :: string , int , std :: string > person { \"Bob\" , 20 , \"USA\" }; std :: string name ; int age ; std :: string country ; std :: tie ( name , age , country ) = person ; // name: \"Bob\", age: 20, country: \"USA\"","title":"3.3. \u30bf\u30d7\u30eb"},{"location":"ch03-03-tuples/#_1","text":"\u30bf\u30d7\u30eb\u306f\u8907\u6570\u306e\u5024\u3092\u3072\u3068\u307e\u3068\u3081\u306b\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u578b\u3067\u3059\u3002 \u914d\u5217\u3068\u4f3c\u305f\u90e8\u5206\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u914d\u5217\u3068\u7570\u306a\u308a\u5404\u8981\u7d20\u306f\u540c\u3058\u578b\u3067\u3042\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u30bf\u30d7\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 #include <tuple> std :: tuple < std :: string , int > person { \"Bob\" , 20 }; < ... > \u306e\u90e8\u5206\u306b\u5404\u8981\u7d20\u306e\u578b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u8981\u7d20\u6570\u306f\u3044\u304f\u3064\u3067\u3082\u5897\u3084\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 std :: tuple < std :: string , int , std :: string > person { \"Bob\" , 20 , \"USA\" };","title":"\u30bf\u30d7\u30eb"},{"location":"ch03-03-tuples/#_2","text":"\u914d\u5217\u3068\u540c\u3058\u3088\u3046\u306b\u30bf\u30d7\u30eb\u3082\u8981\u7d20\u53c2\u7167\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 std :: get < 0 > ( person ); // \"Bob\" std :: get < 1 > ( person ); // 20","title":"\u8981\u7d20\u53c2\u7167"},{"location":"ch03-03-tuples/#_3","text":"\u30bf\u30d7\u30eb\u306f\u521d\u671f\u5316\u65b9\u6cd5\u306b\u5e7e\u3064\u304b\u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002 std :: tuple < std :: string , int > person { \"Bob\" , 20 }; std :: tuple < std :: string , int > person ( \"Bob\" , 20 ); std :: tuple < std :: string , int > person = std :: make_tuple ( \"Bob\" , 20 );","title":"\u521d\u671f\u5316\u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3"},{"location":"ch03-03-tuples/#stdtie","text":"std::tie() \u3068\u3044\u3046\u95a2\u6570\u3092\u4f7f\u3046\u3068\u30bf\u30d7\u30eb\u306e\u8981\u7d20\u3092\u500b\u5225\u306e\u5909\u6570\u306b \u307e\u3068\u3081\u3066\u4ee3\u5165\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 std :: tuple < std :: string , int , std :: string > person { \"Bob\" , 20 , \"USA\" }; std :: string name ; int age ; std :: string country ; std :: tie ( name , age , country ) = person ; // name: \"Bob\", age: 20, country: \"USA\"","title":"std::tie()"},{"location":"ch03-04-vectors/","text":"\u30d9\u30af\u30bf \u00b6 \u8981\u7d20\u6570\u3092\u5b9f\u884c\u6642\u306b\u5909\u66f4\u3067\u304d\u308b\u914d\u5217\u3092\u6271\u3046\u306b\u306f std::vector \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 #include <vector> std :: vector < int > x = { 0 , 1 , 2 , 3 , 4 }; x \u306f\u8981\u7d20\u6570\u304c 5 \u3067\u3042\u308b\u3088\u3046\u306a int \u306e\u914d\u5217\u306b\u306a\u308a\u307e\u3059\u3002 std::vector \u3092\u4f7f\u7528\u3059\u308b\u306b\u306f <vector> \u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002 \u8981\u7d20\u53c2\u7167\u306f\u901a\u5e38\u306e\u914d\u5217\u3068\u540c\u3058\u3088\u3046\u306b\u3067\u304d\u307e\u3059\u3002 x [ 2 ] = 10 ; x.size() \u3068\u3059\u308b\u3068\u8981\u7d20\u6570\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002 auto size = x . size (); // 5 \u672b\u5c3e\u3078\u8981\u7d20\u8ffd\u52a0 \u00b6 x.push_back() \u3068\u3059\u308b\u3068\u672b\u5c3e\u3078\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 #include <vector> std :: vector < int > x = { 0 , 1 , 2 , 3 , 4 }; auto size1 = x . size (); // 5 x . push_back ( 5 ); auto size2 = x . size (); // 6 \u672b\u5c3e\u304b\u3089\u8981\u7d20\u524a\u9664 \u00b6 x.pop_back() \u3068\u3059\u308b\u3068\u672b\u5c3e\u304b\u3089\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 #include <vector> std :: vector < int > x = { 0 , 1 , 2 , 3 , 4 }; auto size1 = x . size (); // 5 x . pop_back (); auto size2 = x . size (); // 4 bool \u306b\u5bfe\u3059\u308b\u7279\u6b8a\u5316 \u00b6 std::vector \u306f bool \u306b\u5bfe\u3057\u3066\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u7279\u6b8a\u5316\u3055\u308c\u3066\u304a\u308a\u3001 std::vector<bool> \u306f bool \u4ee5\u5916\u306e std::vector \u3068\u306f\u52d5\u4f5c\u304c\u7570\u306a\u308a\u307e\u3059\u3002 \u8a73\u7d30\u306f vector - cpprefjp C++\u65e5\u672c\u8a9e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"3.4. \u30d9\u30af\u30bf"},{"location":"ch03-04-vectors/#_1","text":"\u8981\u7d20\u6570\u3092\u5b9f\u884c\u6642\u306b\u5909\u66f4\u3067\u304d\u308b\u914d\u5217\u3092\u6271\u3046\u306b\u306f std::vector \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 #include <vector> std :: vector < int > x = { 0 , 1 , 2 , 3 , 4 }; x \u306f\u8981\u7d20\u6570\u304c 5 \u3067\u3042\u308b\u3088\u3046\u306a int \u306e\u914d\u5217\u306b\u306a\u308a\u307e\u3059\u3002 std::vector \u3092\u4f7f\u7528\u3059\u308b\u306b\u306f <vector> \u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002 \u8981\u7d20\u53c2\u7167\u306f\u901a\u5e38\u306e\u914d\u5217\u3068\u540c\u3058\u3088\u3046\u306b\u3067\u304d\u307e\u3059\u3002 x [ 2 ] = 10 ; x.size() \u3068\u3059\u308b\u3068\u8981\u7d20\u6570\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002 auto size = x . size (); // 5","title":"\u30d9\u30af\u30bf"},{"location":"ch03-04-vectors/#_2","text":"x.push_back() \u3068\u3059\u308b\u3068\u672b\u5c3e\u3078\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 #include <vector> std :: vector < int > x = { 0 , 1 , 2 , 3 , 4 }; auto size1 = x . size (); // 5 x . push_back ( 5 ); auto size2 = x . size (); // 6","title":"\u672b\u5c3e\u3078\u8981\u7d20\u8ffd\u52a0"},{"location":"ch03-04-vectors/#_3","text":"x.pop_back() \u3068\u3059\u308b\u3068\u672b\u5c3e\u304b\u3089\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 #include <vector> std :: vector < int > x = { 0 , 1 , 2 , 3 , 4 }; auto size1 = x . size (); // 5 x . pop_back (); auto size2 = x . size (); // 4","title":"\u672b\u5c3e\u304b\u3089\u8981\u7d20\u524a\u9664"},{"location":"ch03-04-vectors/#bool","text":"std::vector \u306f bool \u306b\u5bfe\u3057\u3066\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u7279\u6b8a\u5316\u3055\u308c\u3066\u304a\u308a\u3001 std::vector<bool> \u306f bool \u4ee5\u5916\u306e std::vector \u3068\u306f\u52d5\u4f5c\u304c\u7570\u306a\u308a\u307e\u3059\u3002 \u8a73\u7d30\u306f vector - cpprefjp C++\u65e5\u672c\u8a9e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"bool \u306b\u5bfe\u3059\u308b\u7279\u6b8a\u5316"},{"location":"ch03-05-maps/","text":"\u30de\u30c3\u30d7 \u00b6 \u914d\u5217\u3067\u306f\u8981\u7d20\u53c2\u7167\u306e\u305f\u3081\u306b\u4f55\u756a\u76ee\u306e\u8981\u7d20\u3068\u6307\u5b9a\u3057\u307e\u3059\u304c\u3001 std::map \u307e\u305f\u306f std::unorderd_map \u3068\u3044\u3046\u578b\u3092\u4f7f\u7528\u3059\u308b\u3068 \u4f55\u756a\u76ee\u3068\u3044\u3046\u6307\u5b9a\u306e\u4ee3\u308f\u308a\u306b\u4efb\u610f\u306e\u578b\u3092\u30ad\u30fc\u3068\u3057\u3066\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u6a5f\u80fd\u306f\u9023\u60f3\u914d\u5217\u3084\u8f9e\u66f8\u3068\u3082\u547c\u3070\u308c\u307e\u3059\u3002 #include <map> std :: map < std :: string , int > persons = { { \"Alice\" , 18 }, { \"Bob\" , 20 } }; #include <unordered_map> std :: unordered_map < std :: string , int > persons = { { \"Alice\" , 18 }, { \"Bob\" , 20 } }; \u8981\u7d20\u53c2\u7167\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 persons [ \"Alice\" ]; // 18 persons [ \"Bob\" ]; // 20 \u8981\u7d20\u8ffd\u52a0 \u00b6 insert() \u3067\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 persons . insert ({ \"Eve\" , 19 }); \u8981\u7d20\u524a\u9664 \u00b6 erase() \u3067\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 persons . erase ( \"Bob\" ); std::map \u3068 std::unordered_map \u306e\u9055\u3044 \u00b6 std::map \u306f\u30ad\u30fc\u3067\u30bd\u30fc\u30c8\u3057\u3066\u30c7\u30fc\u30bf\u3092\u7ba1\u7406\u3059\u308b\u306e\u306b\u5bfe\u3057\u3001 std::unordered_map \u306f\u30ad\u30fc\u304b\u3089\u8a08\u7b97\u3059\u308b\u30cf\u30c3\u30b7\u30e5\u3068\u547c\u3070\u308c\u308b\u5024\u3067\u30c7\u30fc\u30bf\u3092\u7ba1\u7406\u3057\u307e\u3059\u3002 \u52b9\u7387\u306e\u3088\u3044\u30cf\u30c3\u30b7\u30e5\u8a08\u7b97\u3092\u884c\u3048\u308b\u5834\u5408\u306b\u306f std::unordered_map \u306e\u65b9\u304c\u9069\u3057\u3066\u3044\u307e\u3059\u3002","title":"3.5. \u30de\u30c3\u30d7"},{"location":"ch03-05-maps/#_1","text":"\u914d\u5217\u3067\u306f\u8981\u7d20\u53c2\u7167\u306e\u305f\u3081\u306b\u4f55\u756a\u76ee\u306e\u8981\u7d20\u3068\u6307\u5b9a\u3057\u307e\u3059\u304c\u3001 std::map \u307e\u305f\u306f std::unorderd_map \u3068\u3044\u3046\u578b\u3092\u4f7f\u7528\u3059\u308b\u3068 \u4f55\u756a\u76ee\u3068\u3044\u3046\u6307\u5b9a\u306e\u4ee3\u308f\u308a\u306b\u4efb\u610f\u306e\u578b\u3092\u30ad\u30fc\u3068\u3057\u3066\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u6a5f\u80fd\u306f\u9023\u60f3\u914d\u5217\u3084\u8f9e\u66f8\u3068\u3082\u547c\u3070\u308c\u307e\u3059\u3002 #include <map> std :: map < std :: string , int > persons = { { \"Alice\" , 18 }, { \"Bob\" , 20 } }; #include <unordered_map> std :: unordered_map < std :: string , int > persons = { { \"Alice\" , 18 }, { \"Bob\" , 20 } }; \u8981\u7d20\u53c2\u7167\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 persons [ \"Alice\" ]; // 18 persons [ \"Bob\" ]; // 20","title":"\u30de\u30c3\u30d7"},{"location":"ch03-05-maps/#_2","text":"insert() \u3067\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 persons . insert ({ \"Eve\" , 19 });","title":"\u8981\u7d20\u8ffd\u52a0"},{"location":"ch03-05-maps/#_3","text":"erase() \u3067\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 persons . erase ( \"Bob\" );","title":"\u8981\u7d20\u524a\u9664"},{"location":"ch03-05-maps/#stdmap-stdunordered_map","text":"std::map \u306f\u30ad\u30fc\u3067\u30bd\u30fc\u30c8\u3057\u3066\u30c7\u30fc\u30bf\u3092\u7ba1\u7406\u3059\u308b\u306e\u306b\u5bfe\u3057\u3001 std::unordered_map \u306f\u30ad\u30fc\u304b\u3089\u8a08\u7b97\u3059\u308b\u30cf\u30c3\u30b7\u30e5\u3068\u547c\u3070\u308c\u308b\u5024\u3067\u30c7\u30fc\u30bf\u3092\u7ba1\u7406\u3057\u307e\u3059\u3002 \u52b9\u7387\u306e\u3088\u3044\u30cf\u30c3\u30b7\u30e5\u8a08\u7b97\u3092\u884c\u3048\u308b\u5834\u5408\u306b\u306f std::unordered_map \u306e\u65b9\u304c\u9069\u3057\u3066\u3044\u307e\u3059\u3002","title":"std::map \u3068 std::unordered_map \u306e\u9055\u3044"}]}